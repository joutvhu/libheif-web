name: 'Build libheif'

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: libheif Version
        required: true
        default: 1.12.0

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      release: ${{ steps.set_workflow_dispatch.outputs.release || steps.set_release.outputs.release }}
      version: ${{ steps.set_workflow_dispatch.outputs.version || steps.set_release.outputs.version }}
    steps:
      - name: Set version by workflow dispatch
        id: set_workflow_dispatch
        if: ${{ github.event.inputs.version != null }}
        run: |
          echo "::set-output name=release::false"
          echo "::set-output name=version::${{ github.event.inputs.version }}"

      - name: Get Current Release
        id: current_release
        if: ${{ github.event.inputs.version == null }}
        uses: joutvhu/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version by release
        id: set_release
        if: ${{ github.event.inputs.version == null && endsWith(steps.current_release.outputs.tag_name, '_libheif') }}
        run: |
          echo "::set-output name=release::true"
          echo "::set-output name=version::$(echo ${{ steps.current_release.outputs.tag_name }} | cut -c 2- | cut -f 1 -d _)"

      - name: Cancel action
        if: ${{ github.event.inputs.version == null && !endsWith(steps.current_release.outputs.tag_name, '_libheif') }}
        run: exit 1

  build:
    runs-on: ubuntu-latest
    needs: prepare
    env:
      EMSCRIPTEN_VERSION: 1.37.40
    steps:
      - uses: actions/checkout@v2

      - name: Download and extract libheif
        run: |
          chmod +x download-libheif.sh
          ./download-libheif.sh ${{ needs.prepare.outputs.version }} --extract

      - name: Install emscripten
        working-directory: libheif
        run: |
          ./scripts/install-ci-linux.sh

      - name: Prepare CI
        working-directory: libheif
        run: |
          ./scripts/prepare-ci.sh

      - name: Run CI
        working-directory: libheif
        run: |
          ./scripts/run-ci.sh

      - name: Copy file
        run: |
          mkdir -p dist
          rm -rf dist/*
          cp libheif/libheif.js dist/libheif.min.js
          cp libheif/COPYING dist/LICENSE
          ls -a -R

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libheif-js
          path: |
            dist/libheif.min.js
            dist/LICENSE

  unminify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install packages
        run: npm i -g unminify

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: libheif-js
          path: dist

      - name: Unminify libheif
        run: unminify dist/libheif.min.js | sudo tee dist/libheif.js

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libheif
          path: |
            dist/libheif.min.js
            dist/libheif.js
            dist/LICENSE

      - uses: joutvhu/delete-artifact@v1
        with:
          name: libheif-js

  upload:
    runs-on: ubuntu-latest
    needs: unminify
    if: ${{ needs.prepare.outputs.release == 'true' }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: libheif

      - name: Get Current Release
        id: current_release
        uses: joutvhu/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload libheif file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.current_release.outputs.upload_url }}
          asset_name: libheif.min.js
          asset_path: ./libheif.min.js
          asset_content_type: text/javascript

      - name: Upload unminify file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.current_release.outputs.upload_url }}
          asset_name: libheif.js
          asset_path: ./libheif.js
          asset_content_type: text/javascript

      - name: Upload LICENSE file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.current_release.outputs.upload_url }}
          asset_name: LICENSE
          asset_path: ./LICENSE
          asset_content_type: text/plain

      - uses: joutvhu/delete-artifact@v1
        with:
          name: libheif
